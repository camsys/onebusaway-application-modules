<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2011 Metropolitan Transportation Authority

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">


 <!-- Transit Data Service -->
    <bean id="transitDataService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
        <property name="serviceUrl" value="${tds.path}/remoting/transit-data-service" />
        <property name="serviceInterface" value="org.onebusaway.transit_data.services.TransitDataService" />
    </bean>

	<!-- Database Configuration -->
    <bean id="dataSource"
          class="org.springframework.jndi.JndiObjectFactoryBean">
      <property name="jndiName"
                value="java:comp/env/jdbc/appDB"/>   
      <property name="lookupOnStartup"
                value="true"/>   
      <property name="cache"
                value="true"/>   
      <property name="proxyInterface"
                value="javax.sql.DataSource"/>   
      <property name="resourceRef"
                value="true" />
    </bean>

    <alias name="dataSource" alias="mutableDataSource" />

    <!-- Database Connection Configuration for Agency Metadata -->
    <bean id="agencyMetadataDataSource"
          class="org.springframework.jndi.JndiObjectFactoryBean">
      <property name="jndiName"
                value="java:comp/env/jdbc/agencyMetadataDB"/>
      <property name="lookupOnStartup"
                value="true"/>   
      <property name="cache"
                value="true"/>   
      <property name="proxyInterface"
                value="javax.sql.DataSource"/>   
      <property name="resourceRef"
                value="true" />
    </bean>
     <!-- Database Connection Configuration for Bundle Build Response -->
    <bean id="bundleBuildResponseDataSource"
          class="org.springframework.jndi.JndiObjectFactoryBean">
      <property name="jndiName"
                value="java:comp/env/jdbc/appDB"/>
      <property name="lookupOnStartup"
                value="true"/>
      <property name="cache"
                value="true"/>
      <property name="proxyInterface"
                value="javax.sql.DataSource"/>
      <property name="resourceRef"
                value="true" />
    </bean>
    
    
    <!--  Email connection -->
     <bean id="mailSession"
          class="org.springframework.jndi.JndiObjectFactoryBean">
      <property name="jndiName"
                value="java:comp/env/mail/Session"/> 
      <property name="lookupOnStartup"
                value="true"/>   
      <property name="cache"
                value="true"/>   
    </bean> 
   
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    	<property name="session" ref="mailSession"/> 
	</bean>
    
    <!-- Database Connection Configuration for retrieving archived data -->

    <!-- Database Connection Configuration for retrieving assigned vehicle data -->
    <bean id="assignedVehicleDataSource"
          class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName"
                  value="java:comp/env/jdbc/appDB"/>
        <property name="lookupOnStartup"
                  value="true"/>
        <property name="cache"
                  value="true"/>
        <property name="proxyInterface"
                  value="javax.sql.DataSource"/>
        <property name="resourceRef"
                  value="true" />
    </bean>

<!-- Other Stuff: -->

    <bean id="externalGeocoderImpl" class="org.onebusaway.geocoder.enterprise.impl.EnterpriseGoogleGeocoderImpl">
    </bean>

    <bean id="serviceAreaServiceImpl" class="org.onebusaway.presentation.impl.ServiceAreaServiceImpl">
        <property name="calculateDefaultBoundsFromAgencyCoverage" value="true" />
    </bean>
    
    <!--  workaround for ehcache issues, requires unique name to not conflict bundle building -->
    <bean class="org.onebusaway.container.spring.PropertyOverrideConfigurer">
    <property name="properties">
      <props>
        <prop key="cacheManager.cacheManagerName">org.onebusaway.nyc.admin.cacheManager</prop>
<!--         <prop key="rssServiceAlertsService.defaultAgencyId">1</prop> -->
<!--         <prop key="rssServiceAlertsService.alertSource">WMATA</prop> -->
<!--         <prop key="rssServiceAlertsService.serviceStatusUrlString">http://www.metroalerts.info/rss.aspx?bus</prop> -->
<!--         <prop key="rssServiceAlertsService.serviceAdvisoryUrlString">http://www.wmata.com/rider_tools/metro_service_status/feeds/bus_Advisories.xml</prop> -->
      </props>
    </property>
	</bean>
	
	<bean id="webappHibernateProperties" class="org.onebusaway.container.spring.PropertiesBeanPostProcessor">
        <property name="target" value="hibernateProperties" />
        <property name="properties">
            <props>
              <prop key="hibernate.show_sql">false</prop>
               <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props> 
        </property> 
    </bean>
    
	<bean id="agencyMetadataSessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="agencyMetadataDataSource" />
		<property name="annotatedClasses">
			<list>
				<value>org.onebusaway.agency_metadata.model.AgencyMetadata</value>
				<value>org.onebusaway.agency_metadata.service.AgencyMetadataDaoImpl</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.connection.pool_size">1</prop>
				<!--<prop key="hibernate.current_session_context_class">thread</prop>-->
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.internal.NoCachingRegionFactory</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.jdbc.batch_size">1000</prop>
			</props>
		</property>
	</bean>
     <bean id="bundleBuildResponseSessionFactory"
    class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
    <property name="dataSource" ref="bundleBuildResponseDataSource" />
    <property name="annotatedClasses">
      <list>
        <value>org.onebusaway.admin.model.BundleBuildResponse</value>
        <value>org.onebusaway.admin.service.bundle.impl.BundleBuildResponseDaoImpl</value>
      </list>
    </property>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
        <prop key="hibernate.connection.pool_size">1</prop>
        <!--<prop key="hibernate.current_session_context_class">thread</prop>-->
        <prop key="hibernate.cache.provider_class">org.hibernate.cache.internal.NoCachingRegionFactory</prop>
        <prop key="hibernate.show_sql">false</prop>
        <prop key="hibernate.hbm2ddl.auto">update</prop>
        <prop key="hibernate.jdbc.batch_size">1000</prop>
      </props>
    </property>
  </bean>

    <bean id="assignmentSessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="assignedVehicleDataSource" />
        <property name="annotatedClasses">
            <list>
                <value>org.onebusaway.admin.model.assignments.Assignment</value>
                <value>org.onebusaway.admin.model.assignments.AssignmentConfig</value>
                <value>org.onebusaway.admin.service.assignments.impl.AssignmentDaoImpl</value>
                <value>org.onebusaway.admin.service.assignments.impl.AssignmentConfigDaoImpl</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.connection.pool_size">1</prop>
                <!--<prop key="hibernate.current_session_context_class">thread</prop>-->
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.internal.NoCachingRegionFactory</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.jdbc.batch_size">1000</prop>
            </props>
        </property>
    </bean>

	<!-- quartz scheduling for PingJob -->
	<bean name="pingJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="org.onebusaway.admin.job.PingJob" />
		<property name="jobDataAsMap">
			<map>
      			<entry key="userManagementService" value-ref="userManagementServiceImpl"/>
     		</map>
		</property>
        <property name="durability" value="true" />
	</bean>
	
	<bean id="pingTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="pingJob" />
		<property name="cronExpression" value="0 * * * * ?" /><!--  every minute -->
	</bean>

    <!-- quartz scheduling for ResetVehicleAssignmentsJob -->
    <bean name="resetJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="org.onebusaway.admin.job.ResetVehicleAssignmentsJob" />
        <property name="jobDataAsMap">
            <map>
                <entry key="assignmentDao" value-ref="assignmentDaoImpl"/>
                <entry key="assignmentConfigDao" value-ref="assignmentConfigDaoImpl"/>
            </map>
        </property>
        <property name="durability" value="true" />
    </bean>

    <bean id="serviceAlerts" class="org.onebusaway.admin.service.server.impl.ConsoleServiceAlertsServiceImpl" />

    <bean id="resetTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="resetJob" />
        <property name="cronExpression" value="0 0 3 * * ?" /><!--  03:00 every day -->
    </bean>

	<bean id="gsonTool" class="org.onebusaway.admin.json.LowerCaseWDashesGsonJsonTool">
    <property name="prettyPrintOutput" value="false" />
  </bean>
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="pingTrigger" />
                <ref bean="resetTrigger" />
            </list>
		</property>
	</bean>
	
	
</beans>
